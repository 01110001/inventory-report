#----importing the packages----
load_package <- function() {
  packages <- c("dplyr", "stringr", "readxl", "tinytex", "officer")
  
  for (pkg in packages) {
    tryCatch({
      library(pkg, character.only = TRUE)
      message(paste("Successfully loaded", pkg))
    }, error = function(e) {
      message(paste("Failed to load", pkg, ":", e$message))
    })
  }
}

load_package()



main <- function() {

  #----DECLARING FUNCTION FOR DATA MANIPULATION----
  prepare <- function(dataset) {
    require(dplyr)
    
    df_summary <- dataset %>%
      group_by(Grade, Largeur, Location, Essence, num_paquet,type) %>%
      summarise(Somme_PMP = sum(PMP, na.rm = TRUE), .groups = 'drop')
    
    df_by_grade <- df_summary %>%
      group_by(Grade, Location, Essence) %>%
      group_split()
    
    return(df_by_grade)
  }
  
  add_row_sum <- function(list) {
    require(dplyr)
    for (i in seq_along(list)) {
      summary <- list[[i]] %>% 
        summarise(
          Grade = "Total",
          Largeur = "",
          Location = "",
          num_paquet = n_distinct(num_paquet),
          Somme_PMP = sum(Somme_PMP)
        )
      
       list[[i]] <- bind_rows(list[[i]], summary)
    }
    return(list)
  }
  
  
  #----READING THE DATASET----
  # Download the file
  quatre_quart <- read_excel("")
  
  six_quart <- read_excel("")
  
  
  
  
  #----CLEANING THE DATA----
  six_quart_cleaned <- six_quart %>% filter(num_paquet != "PAS NUMERO") %>% 
    mutate(num_paquet = as.numeric(num_paquet))
  
  quatre_quart_cleaned <- quatre_quart
  
  #--------SEPARATING THE DATA INTO DIFFERENT GROUP--------
  sq_vert <- six_quart_cleaned %>% filter(Location == "VERT")
  sq_sec <- six_quart_cleaned %>% filter(Location == "SEC")
  sq_sechoir <- six_quart_cleaned %>%
    filter(grepl("séchoir", Location, ignore.case = TRUE))
  
  qq_vert <- quatre_quart_cleaned %>% filter(Location == "VERT")
  qq_sec <- quatre_quart_cleaned %>% filter(Location == "SEC")
  qq_sechoir <- quatre_quart_cleaned %>% filter(grepl("séchoir", Location, ignore.case = TRUE))
  
  
  
  inventaire_vert <- c(prepare(sq_vert), prepare(qq_vert))
  inventaire_sec <- c(prepare(sq_sec), prepare(qq_sec))
  inventaire_sechoir <- c(prepare(sq_sechoir), prepare(qq_sechoir))
  
  
  #--------FINAL STEP ADDING THE SUM TO THE TABLE.--------
  inventaire_vert_ready <- add_row_sum(inventaire_vert)
  inventaire_sec_ready <- add_row_sum(inventaire_sec)
  inventaire_sechoir_ready <- add_row_sum(inventaire_sechoir)
  
  
  
  
  #------printing---the----report-----------------------------------
  
  # Function to generate the table name
  generate_table_name <- function(table) {
    if (!all(c("Location", "Grade", "Essence","type") %in% colnames(table))) {
      stop("Table does not contain required columns: Location, Grade, Essence")
    }
      location <- ifelse(!is.na(table$Location[1]), table$Location[1], "")
      grade <- ifelse(!is.na(table$Grade[1]), table$Grade[1], "")
      essence <- ifelse(!is.na(table$Essence[1]), table$Essence[1], "")
      type <- ifelse(!is.na(table$type[1]), table$type[1], "")
      
    paste(type, location, grade, essence, sep = " ")
  }
  
  
  #----Function to add table with title to the document
  add_table_with_title <- function(doc, table, title) {
    require(officer)
    doc <- doc %>%
      body_add_par(value = title, style = "heading 1") %>%
      body_add_table(value = table, style = "table_template")
    return(doc)
  }
  
  
  
  generate_document <- function(tables, output_file) {
    doc <- read_docx()
    for (table in tables) {
      table_name <- generate_table_name(table)
      print(paste("Adding table:", table_name)) # Debugging statement
      doc <- add_table_with_title(doc, table, table_name)
    }
    print(doc, target = output_file)
  }
  
  target_folder <- ""

  # Generate and save the PDF documents
  generate_document(inventaire_sec_ready, file.path(target_folder, "inventaire_sec.docx"))
  generate_document(inventaire_vert_ready, file.path(target_folder, "inventory_vert.docx"))
  generate_document(inventaire_sechoir_ready, file.path(target_folder, "inventory_sechoir.docx"))
  
  # Save the Word documents
 
  #print(au_sec, target = "inventaire_sec.docx")
  #print(au_vert, target = "inventory_vert.docx")
  #print(au_sechoir, target = "inventory_sechoir.docx")
  
  # Full path to pandoc
  pandoc_path <- ""
  
  # Convert Word documents to PDF using pandoc with xelatex
  system(paste(shQuote(pandoc_path), shQuote(file.path(target_folder, "inventaire_sec.docx")), "--pdf-engine=xelatex", "-o", shQuote(file.path(target_folder, "inventaire_sec.pdf"))))
  system(paste(shQuote(pandoc_path), shQuote(file.path(target_folder, "inventory_vert.docx")), "--pdf-engine=xelatex", "-o", shQuote(file.path(target_folder, "inventory_vert.pdf"))))
  system(paste(shQuote(pandoc_path), shQuote(file.path(target_folder, "inventory_sechoir.docx")), "--pdf-engine=xelatex", "-o", shQuote(file.path(target_folder, "inventory_sechoir.pdf"))))
}  

main()






# Filter the data and sum the PMP column
bois_sec_6q <- x6_cleaned %>%
  filter(Location == "SEC") %>%
  summarise(total_PMP = sum(PMP, na.rm = TRUE))


